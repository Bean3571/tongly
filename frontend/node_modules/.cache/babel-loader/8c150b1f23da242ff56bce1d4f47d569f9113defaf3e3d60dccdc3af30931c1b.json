{"ast":null,"code":"var _jsxFileName = \"C:\\\\Custom\\\\Coding\\\\tongly-basic\\\\tongly-basic\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api } from '../api/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Fetch user profile\n      api.user.getProfile().then(response => {\n        setUser(response.data);\n      }).catch(() => {\n        localStorage.removeItem('token');\n        setUser(null);\n      });\n    }\n  }, []);\n  const login = async (username, password) => {\n    const response = await api.auth.login(username, password);\n    localStorage.setItem('token', response.token);\n    await refreshUser();\n  };\n  const register = async (username, email, password) => {\n    await api.auth.register({\n      username,\n      email,\n      password,\n      role: 'student'\n    });\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  const refreshUser = async () => {\n    try {\n      const userData = await api.user.getProfile();\n      setUser(userData);\n    } catch (error) {\n      console.error('Failed to fetch user profile:', error);\n      logout();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout,\n      refreshUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","token","localStorage","getItem","getProfile","then","response","data","catch","removeItem","login","username","password","auth","setItem","refreshUser","register","email","role","logout","userData","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Custom/Coding/tongly-basic/tongly-basic/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { api } from '../api/client';\r\n\r\nexport interface User {\r\n    id: number;\r\n    username: string;\r\n    email: string;\r\n    first_name: string | null;\r\n    last_name: string | null;\r\n    profile_picture: string | null;\r\n    role: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n    user: User | null;\r\n    login: (username: string, password: string) => Promise<void>;\r\n    register: (username: string, email: string, password: string) => Promise<void>;\r\n    logout: () => void;\r\n    refreshUser: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const [user, setUser] = useState<User | null>(null);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            // Fetch user profile\r\n            api.user.getProfile()\r\n                .then(response => {\r\n                    setUser(response.data);\r\n                })\r\n                .catch(() => {\r\n                    localStorage.removeItem('token');\r\n                    setUser(null);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    const login = async (username: string, password: string) => {\r\n        const response = await api.auth.login(username, password);\r\n        localStorage.setItem('token', response.token);\r\n        await refreshUser();\r\n    };\r\n\r\n    const register = async (username: string, email: string, password: string) => {\r\n        await api.auth.register({ username, email, password, role: 'student' });\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n    };\r\n\r\n    const refreshUser = async () => {\r\n        try {\r\n            const userData = await api.user.getProfile();\r\n            setUser(userData);\r\n        } catch (error) {\r\n            console.error('Failed to fetch user profile:', error);\r\n            logout();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, register, logout, refreshUser }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (context === undefined) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAoBpC,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAc,IAAI,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACZ,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACP;MACAV,GAAG,CAACQ,IAAI,CAACK,UAAU,CAAC,CAAC,CAChBC,IAAI,CAACC,QAAQ,IAAI;QACdN,OAAO,CAACM,QAAQ,CAACC,IAAI,CAAC;MAC1B,CAAC,CAAC,CACDC,KAAK,CAAC,MAAM;QACTN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;QAChCT,OAAO,CAAC,IAAI,CAAC;MACjB,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,KAAK,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,KAAK;IACxD,MAAMN,QAAQ,GAAG,MAAMf,GAAG,CAACsB,IAAI,CAACH,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC;IACzDV,YAAY,CAACY,OAAO,CAAC,OAAO,EAAER,QAAQ,CAACL,KAAK,CAAC;IAC7C,MAAMc,WAAW,CAAC,CAAC;EACvB,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOL,QAAgB,EAAEM,KAAa,EAAEL,QAAgB,KAAK;IAC1E,MAAMrB,GAAG,CAACsB,IAAI,CAACG,QAAQ,CAAC;MAAEL,QAAQ;MAAEM,KAAK;MAAEL,QAAQ;MAAEM,IAAI,EAAE;IAAU,CAAC,CAAC;EAC3E,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjBjB,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCT,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMK,QAAQ,GAAG,MAAM7B,GAAG,CAACQ,IAAI,CAACK,UAAU,CAAC,CAAC;MAC5CJ,OAAO,CAACoB,QAAQ,CAAC;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDF,MAAM,CAAC,CAAC;IACZ;EACJ,CAAC;EAED,oBACI1B,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,IAAI;MAAEW,KAAK;MAAEM,QAAQ;MAAEG,MAAM;MAAEJ;IAAY,CAAE;IAAAlB,QAAA,EACvEA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC9B,EAAA,CAhDWF,YAAqD;AAAAiC,EAAA,GAArDjC,YAAqD;AAkDlE,OAAO,MAAMkC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAG5C,UAAU,CAACM,WAAW,CAAC;EACvC,IAAIsC,OAAO,KAAKrC,SAAS,EAAE;IACvB,MAAM,IAAIsC,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}