{"ast":null,"code":"var _jsxFileName = \"C:\\\\Custom\\\\Coding\\\\tongly-basic\\\\tongly-basic\\\\frontend\\\\src\\\\contexts\\\\NotificationContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext(undefined);\nexport const useNotification = () => {\n  _s();\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n};\n_s(useNotification, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s2();\n  const [notification, setNotification] = useState(null);\n  const [timeoutId, setTimeoutId] = useState(null);\n  const showNotification = useCallback((type, message) => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    setNotification({\n      type,\n      message\n    });\n    const id = setTimeout(() => {\n      setNotification(null);\n      setTimeoutId(null);\n    }, 3000);\n    setTimeoutId(id);\n  }, [timeoutId]);\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      notification,\n      showNotification\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s2(NotificationProvider, \"7p+laFt46Fi0lnOe2u9I9rZ8cMg=\");\n_c = NotificationProvider;\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","NotificationContext","undefined","useNotification","_s","context","Error","NotificationProvider","children","_s2","notification","setNotification","timeoutId","setTimeoutId","showNotification","type","message","clearTimeout","id","setTimeout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Custom/Coding/tongly-basic/tongly-basic/frontend/src/contexts/NotificationContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\r\n\r\ntype NotificationType = 'success' | 'error';\r\n\r\ninterface Notification {\r\n    type: NotificationType;\r\n    message: string;\r\n}\r\n\r\ninterface NotificationContextType {\r\n    notification: Notification | null;\r\n    showNotification: (type: NotificationType, message: string) => void;\r\n}\r\n\r\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined);\r\n\r\nexport const useNotification = () => {\r\n    const context = useContext(NotificationContext);\r\n    if (!context) {\r\n        throw new Error('useNotification must be used within a NotificationProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\ninterface NotificationProviderProps {\r\n    children: React.ReactNode;\r\n}\r\n\r\nexport const NotificationProvider: React.FC<NotificationProviderProps> = ({ children }) => {\r\n    const [notification, setNotification] = useState<Notification | null>(null);\r\n    const [timeoutId, setTimeoutId] = useState<NodeJS.Timeout | null>(null);\r\n\r\n    const showNotification = useCallback((type: NotificationType, message: string) => {\r\n        if (timeoutId) {\r\n            clearTimeout(timeoutId);\r\n        }\r\n\r\n        setNotification({ type, message });\r\n\r\n        const id = setTimeout(() => {\r\n            setNotification(null);\r\n            setTimeoutId(null);\r\n        }, 3000);\r\n\r\n        setTimeoutId(id);\r\n    }, [timeoutId]);\r\n\r\n    return (\r\n        <NotificationContext.Provider value={{ notification, showNotification }}>\r\n            {children}\r\n        </NotificationContext.Provider>\r\n    );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAchF,MAAMC,mBAAmB,gBAAGN,aAAa,CAAsCO,SAAS,CAAC;AAEzF,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,OAAO,GAAGT,UAAU,CAACK,mBAAmB,CAAC;EAC/C,IAAI,CAACI,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,4DAA4D,CAAC;EACjF;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,EAAA,CANWD,eAAe;AAY5B,OAAO,MAAMI,oBAAyD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACvF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAsB,IAAI,CAAC;EAC3E,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAwB,IAAI,CAAC;EAEvE,MAAMiB,gBAAgB,GAAGhB,WAAW,CAAC,CAACiB,IAAsB,EAAEC,OAAe,KAAK;IAC9E,IAAIJ,SAAS,EAAE;MACXK,YAAY,CAACL,SAAS,CAAC;IAC3B;IAEAD,eAAe,CAAC;MAAEI,IAAI;MAAEC;IAAQ,CAAC,CAAC;IAElC,MAAME,EAAE,GAAGC,UAAU,CAAC,MAAM;MACxBR,eAAe,CAAC,IAAI,CAAC;MACrBE,YAAY,CAAC,IAAI,CAAC;IACtB,CAAC,EAAE,IAAI,CAAC;IAERA,YAAY,CAACK,EAAE,CAAC;EACpB,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;EAEf,oBACIZ,OAAA,CAACC,mBAAmB,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEX,YAAY;MAAEI;IAAiB,CAAE;IAAAN,QAAA,EACnEA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEvC,CAAC;AAAChB,GAAA,CAxBWF,oBAAyD;AAAAmB,EAAA,GAAzDnB,oBAAyD;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}