{"ast":null,"code":"var _jsxFileName = \"C:\\\\Custom\\\\Coding\\\\tongly-basic\\\\tongly-basic\\\\frontend\\\\src\\\\contexts\\\\NotificationContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext({\n  notifications: [],\n  showNotification: () => {},\n  removeNotification: () => {}\n});\nexport const useNotification = () => {\n  _s();\n  return useContext(NotificationContext);\n};\n_s(useNotification, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s2();\n  const [notifications, setNotifications] = useState([]);\n  const showNotification = (type, message) => {\n    const id = Date.now();\n    setNotifications(prev => [...prev, {\n      id,\n      type,\n      message\n    }]);\n\n    // Auto remove after 5 seconds\n    setTimeout(() => {\n      removeNotification(id);\n    }, 5000);\n  };\n  const removeNotification = id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      notifications,\n      showNotification,\n      removeNotification\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-4 right-4 z-50 space-y-2\",\n      children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `px-4 py-3 rounded-lg shadow-lg max-w-md transform transition-all duration-300 \n                                  ${notification.type === 'success' ? 'bg-green-500 text-white' : notification.type === 'error' ? 'bg-red-500 text-white' : notification.type === 'warning' ? 'bg-yellow-500 text-white' : 'bg-blue-500 text-white'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium\",\n            children: notification.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeNotification(notification.id),\n            className: \"ml-4 text-white hover:text-gray-200 transition-colors\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, notification.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s2(NotificationProvider, \"/HH3zTd3BUNOgnlhD79kguSWbWM=\");\n_c = NotificationProvider;\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","NotificationContext","notifications","showNotification","removeNotification","useNotification","_s","NotificationProvider","children","_s2","setNotifications","type","message","id","Date","now","prev","setTimeout","filter","notification","Provider","value","className","map","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Custom/Coding/tongly-basic/tongly-basic/frontend/src/contexts/NotificationContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\ntype NotificationType = 'success' | 'error' | 'info' | 'warning';\r\n\r\ninterface Notification {\r\n    id: number;\r\n    type: NotificationType;\r\n    message: string;\r\n}\r\n\r\ninterface NotificationContextType {\r\n    notifications: Notification[];\r\n    showNotification: (type: NotificationType, message: string) => void;\r\n    removeNotification: (id: number) => void;\r\n}\r\n\r\nconst NotificationContext = createContext<NotificationContextType>({\r\n    notifications: [],\r\n    showNotification: () => {},\r\n    removeNotification: () => {},\r\n});\r\n\r\nexport const useNotification = () => useContext(NotificationContext);\r\n\r\nexport const NotificationProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const [notifications, setNotifications] = useState<Notification[]>([]);\r\n\r\n    const showNotification = (type: NotificationType, message: string) => {\r\n        const id = Date.now();\r\n        setNotifications(prev => [...prev, { id, type, message }]);\r\n\r\n        // Auto remove after 5 seconds\r\n        setTimeout(() => {\r\n            removeNotification(id);\r\n        }, 5000);\r\n    };\r\n\r\n    const removeNotification = (id: number) => {\r\n        setNotifications(prev => prev.filter(notification => notification.id !== id));\r\n    };\r\n\r\n    return (\r\n        <NotificationContext.Provider value={{ notifications, showNotification, removeNotification }}>\r\n            {children}\r\n            {/* Notification Toast Container */}\r\n            <div className=\"fixed bottom-4 right-4 z-50 space-y-2\">\r\n                {notifications.map(notification => (\r\n                    <div\r\n                        key={notification.id}\r\n                        className={`px-4 py-3 rounded-lg shadow-lg max-w-md transform transition-all duration-300 \r\n                                  ${notification.type === 'success' ? 'bg-green-500 text-white' :\r\n                                    notification.type === 'error' ? 'bg-red-500 text-white' :\r\n                                    notification.type === 'warning' ? 'bg-yellow-500 text-white' :\r\n                                    'bg-blue-500 text-white'}`}\r\n                    >\r\n                        <div className=\"flex justify-between items-center\">\r\n                            <p className=\"font-medium\">{notification.message}</p>\r\n                            <button\r\n                                onClick={() => removeNotification(notification.id)}\r\n                                className=\"ml-4 text-white hover:text-gray-200 transition-colors\"\r\n                            >\r\n                                Ã—\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </NotificationContext.Provider>\r\n    );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}