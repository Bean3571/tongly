{"ast":null,"code":"var _jsxFileName = \"C:\\\\Custom\\\\Coding\\\\tongly-basic\\\\tongly-basic\\\\frontend\\\\src\\\\pages\\\\Profile.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Button, FormControl, FormLabel, Input, VStack, useToast, Avatar } from '@chakra-ui/react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { apiClient } from '../api/client';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Profile = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const toast = useToast();\n  const formik = useFormik({\n    initialValues: {\n      email: (user === null || user === void 0 ? void 0 : user.email) || '',\n      profilePicture: (user === null || user === void 0 ? void 0 : user.profilePicture) || ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email').required('Required'),\n      profilePicture: Yup.string().url('Must be a valid URL')\n    }),\n    onSubmit: async values => {\n      try {\n        await apiClient.put('/profile', values);\n        toast({\n          title: 'Success',\n          description: 'Profile updated successfully',\n          status: 'success'\n        });\n      } catch (error) {\n        toast({\n          title: 'Error',\n          description: 'Failed to update profile',\n          status: 'error'\n        });\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maxW: \"md\",\n    mx: \"auto\",\n    mt: 8,\n    p: 6,\n    borderWidth: 1,\n    borderRadius: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 6,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        size: \"2xl\",\n        name: user === null || user === void 0 ? void 0 : user.username,\n        src: user === null || user === void 0 ? void 0 : user.profilePicture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        style: {\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"email\",\n              value: formik.values.email,\n              onChange: formik.handleChange,\n              isInvalid: !!formik.errors.email && formik.touched.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Profile Picture URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"profilePicture\",\n              value: formik.values.profilePicture,\n              onChange: formik.handleChange,\n              isInvalid: !!formik.errors.profilePicture && formik.touched.profilePicture\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            colorScheme: \"blue\",\n            width: \"full\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"z9QN4bhiFy10ILwW2zPZOz1Htus=\", false, function () {\n  return [useAuth, useToast, useFormik];\n});\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","Box","Button","FormControl","FormLabel","Input","VStack","useToast","Avatar","useFormik","Yup","apiClient","useAuth","jsxDEV","_jsxDEV","Profile","_s","user","toast","formik","initialValues","email","profilePicture","validationSchema","object","string","required","url","onSubmit","values","put","title","description","status","error","maxW","mx","mt","p","borderWidth","borderRadius","children","spacing","size","name","username","src","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","style","width","value","onChange","handleChange","isInvalid","errors","touched","type","colorScheme","_c","$RefreshReg$"],"sources":["C:/Custom/Coding/tongly-basic/tongly-basic/frontend/src/pages/Profile.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, Button, FormControl, FormLabel, Input, VStack, useToast, Avatar } from '@chakra-ui/react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { apiClient } from '../api/client';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\ninterface ProfileFormValues {\r\n    email: string;\r\n    profilePicture: string;\r\n}\r\n\r\nexport const Profile = () => {\r\n    const { user } = useAuth();\r\n    const toast = useToast();\r\n\r\n    const formik = useFormik<ProfileFormValues>({\r\n        initialValues: {\r\n            email: user?.email || '',\r\n            profilePicture: user?.profilePicture || '',\r\n        },\r\n        validationSchema: Yup.object({\r\n            email: Yup.string().email('Invalid email').required('Required'),\r\n            profilePicture: Yup.string().url('Must be a valid URL'),\r\n        }),\r\n        onSubmit: async (values: ProfileFormValues) => {\r\n            try {\r\n                await apiClient.put('/profile', values);\r\n                toast({\r\n                    title: 'Success',\r\n                    description: 'Profile updated successfully',\r\n                    status: 'success',\r\n                });\r\n            } catch (error) {\r\n                toast({\r\n                    title: 'Error',\r\n                    description: 'Failed to update profile',\r\n                    status: 'error',\r\n                });\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <Box maxW=\"md\" mx=\"auto\" mt={8} p={6} borderWidth={1} borderRadius=\"lg\">\r\n            <VStack spacing={6}>\r\n                <Avatar\r\n                    size=\"2xl\"\r\n                    name={user?.username}\r\n                    src={user?.profilePicture}\r\n                />\r\n                <form onSubmit={formik.handleSubmit} style={{ width: '100%' }}>\r\n                    <VStack spacing={4}>\r\n                        <FormControl>\r\n                            <FormLabel>Email</FormLabel>\r\n                            <Input\r\n                                name=\"email\"\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                                isInvalid={!!formik.errors.email && formik.touched.email}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormLabel>Profile Picture URL</FormLabel>\r\n                            <Input\r\n                                name=\"profilePicture\"\r\n                                value={formik.values.profilePicture}\r\n                                onChange={formik.handleChange}\r\n                                isInvalid={!!formik.errors.profilePicture && formik.touched.profilePicture}\r\n                            />\r\n                        </FormControl>\r\n                        <Button type=\"submit\" colorScheme=\"blue\" width=\"full\">\r\n                            Update Profile\r\n                        </Button>\r\n                    </VStack>\r\n                </form>\r\n            </VStack>\r\n        </Box>\r\n    );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}