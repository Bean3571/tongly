{"ast":null,"code":"var _jsxFileName = \"C:\\\\Custom\\\\Coding\\\\tongly-basic\\\\tongly-basic\\\\frontend\\\\src\\\\components\\\\Notification.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNotification } from '../contexts/NotificationContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getBackgroundColor = type => {\n  switch (type) {\n    case 'success':\n      return 'bg-green-500';\n    case 'error':\n      return 'bg-red-500';\n    case 'warning':\n      return 'bg-yellow-500';\n    case 'info':\n      return 'bg-blue-500';\n    default:\n      return 'bg-gray-500';\n  }\n};\nconst Notification = () => {\n  _s();\n  const {\n    notification\n  } = useNotification();\n  if (!notification) return null;\n  const {\n    type,\n    message\n  } = notification;\n  const bgColor = getBackgroundColor(type);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-4 right-4 z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${bgColor} text-white px-6 py-4 rounded-lg shadow-lg`,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Notification, \"EMsXXb/0kLSA7Zkkj59I5zqeiMA=\", false, function () {\n  return [useNotification];\n});\n_c = Notification;\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","useNotification","jsxDEV","_jsxDEV","getBackgroundColor","type","Notification","_s","notification","message","bgColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Custom/Coding/tongly-basic/tongly-basic/frontend/src/components/Notification.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useNotification } from '../contexts/NotificationContext';\r\nimport { NotificationType } from '../types';\r\n\r\nconst getBackgroundColor = (type: NotificationType): string => {\r\n    switch (type) {\r\n        case 'success':\r\n            return 'bg-green-500';\r\n        case 'error':\r\n            return 'bg-red-500';\r\n        case 'warning':\r\n            return 'bg-yellow-500';\r\n        case 'info':\r\n            return 'bg-blue-500';\r\n        default:\r\n            return 'bg-gray-500';\r\n    }\r\n};\r\n\r\nconst Notification: React.FC = () => {\r\n    const { notification } = useNotification();\r\n\r\n    if (!notification) return null;\r\n\r\n    const { type, message } = notification;\r\n    const bgColor = getBackgroundColor(type);\r\n\r\n    return (\r\n        <div className=\"fixed bottom-4 right-4 z-50\">\r\n            <div className={`${bgColor} text-white px-6 py-4 rounded-lg shadow-lg`}>\r\n                <p>{message}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlE,MAAMC,kBAAkB,GAAIC,IAAsB,IAAa;EAC3D,QAAQA,IAAI;IACR,KAAK,SAAS;MACV,OAAO,cAAc;IACzB,KAAK,OAAO;MACR,OAAO,YAAY;IACvB,KAAK,SAAS;MACV,OAAO,eAAe;IAC1B,KAAK,MAAM;MACP,OAAO,aAAa;IACxB;MACI,OAAO,aAAa;EAC5B;AACJ,CAAC;AAED,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAa,CAAC,GAAGP,eAAe,CAAC,CAAC;EAE1C,IAAI,CAACO,YAAY,EAAE,OAAO,IAAI;EAE9B,MAAM;IAAEH,IAAI;IAAEI;EAAQ,CAAC,GAAGD,YAAY;EACtC,MAAME,OAAO,GAAGN,kBAAkB,CAACC,IAAI,CAAC;EAExC,oBACIF,OAAA;IAAKQ,SAAS,EAAC,6BAA6B;IAAAC,QAAA,eACxCT,OAAA;MAAKQ,SAAS,EAAE,GAAGD,OAAO,4CAA6C;MAAAE,QAAA,eACnET,OAAA;QAAAS,QAAA,EAAIH;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACT,EAAA,CAfID,YAAsB;EAAA,QACCL,eAAe;AAAA;AAAAgB,EAAA,GADtCX,YAAsB;AAiB5B,eAAeA,YAAY;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}