{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api';\nexport const apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true\n});\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token && config.headers) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// API endpoints interface\nexport const api = {\n  auth: {\n    login: credentials => apiClient.post('/auth/login', credentials),\n    register: data => apiClient.post('/auth/register', data)\n  },\n  user: {\n    getProfile: () => apiClient.get('/profile'),\n    updateProfile: data => apiClient.put('/profile', data),\n    updatePassword: data => apiClient.put('/profile/password', data)\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_BASE_URL","apiClient","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","api","auth","login","credentials","post","register","data","user","getProfile","get","updateProfile","put","updatePassword"],"sources":["C:/Custom/Coding/tongly-basic/tongly-basic/frontend/src/api/client.ts"],"sourcesContent":["import axios from 'axios';\r\nimport type { AxiosRequestConfig } from 'axios/index';\r\n\r\nconst API_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api';\r\n\r\nexport const apiClient = axios.create({\r\n    baseURL: API_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    withCredentials: true\r\n});\r\n\r\napiClient.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token && config.headers) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n});\r\n\r\n// API endpoints interface\r\nexport const api = {\r\n    auth: {\r\n        login: (credentials: { username: string; password: string }) =>\r\n            apiClient.post('/auth/login', credentials),\r\n        register: (data: { username: string; password: string; email: string; role: string }) =>\r\n            apiClient.post('/auth/register', data),\r\n    },\r\n    user: {\r\n        getProfile: () => apiClient.get('/profile'),\r\n        updateProfile: (data: { email?: string; profilePicture?: string }) =>\r\n            apiClient.put('/profile', data),\r\n        updatePassword: (data: { currentPassword: string; newPassword: string }) =>\r\n            apiClient.put('/profile/password', data),\r\n    },\r\n};\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,2BAA2B;AAEjF,OAAO,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAM,CAAC;EAClCC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACL,cAAc,EAAE;EACpB,CAAC;EACDC,eAAe,EAAE;AACrB,CAAC,CAAC;AAEFJ,SAAS,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC3C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,IAAID,MAAM,CAACL,OAAO,EAAE;IACzBK,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,GAAG,GAAG;EACfC,IAAI,EAAE;IACFC,KAAK,EAAGC,WAAmD,IACvDhB,SAAS,CAACiB,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;IAC9CE,QAAQ,EAAGC,IAAyE,IAChFnB,SAAS,CAACiB,IAAI,CAAC,gBAAgB,EAAEE,IAAI;EAC7C,CAAC;EACDC,IAAI,EAAE;IACFC,UAAU,EAAEA,CAAA,KAAMrB,SAAS,CAACsB,GAAG,CAAC,UAAU,CAAC;IAC3CC,aAAa,EAAGJ,IAAiD,IAC7DnB,SAAS,CAACwB,GAAG,CAAC,UAAU,EAAEL,IAAI,CAAC;IACnCM,cAAc,EAAGN,IAAsD,IACnEnB,SAAS,CAACwB,GAAG,CAAC,mBAAmB,EAAEL,IAAI;EAC/C;AACJ,CAAC;AAED,eAAeN,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}