{"ast":null,"code":"var _jsxFileName = \"C:\\\\Custom\\\\Coding\\\\tongly-basic\\\\tongly-basic\\\\frontend\\\\src\\\\pages\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Button, FormControl, FormLabel, Input, VStack, useToast } from '@chakra-ui/react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { apiClient } from '../api/client';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const {\n    login\n  } = useAuth();\n  const navigate = useNavigate();\n  const toast = useToast();\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      username: Yup.string().required('Required'),\n      password: Yup.string().required('Required')\n    }),\n    onSubmit: async values => {\n      try {\n        const response = await apiClient.post('/auth/login', values);\n        login(response.data.token);\n        navigate('/');\n      } catch (error) {\n        toast({\n          title: 'Error',\n          description: 'Invalid credentials',\n          status: 'error'\n        });\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maxW: \"md\",\n    mx: \"auto\",\n    mt: 8,\n    p: 6,\n    borderWidth: 1,\n    borderRadius: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        as: \"div\",\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"username\",\n            value: formik.values.username,\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            type: \"password\",\n            value: formik.values.password,\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          colorScheme: \"blue\",\n          width: \"full\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"WzR5gb9ccW6k3wUfbS7DBTpy+hQ=\", false, function () {\n  return [useAuth, useNavigate, useToast, useFormik];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Box","Button","FormControl","FormLabel","Input","VStack","useToast","useFormik","Yup","apiClient","useAuth","useNavigate","jsxDEV","_jsxDEV","Login","_s","login","navigate","toast","formik","initialValues","username","password","validationSchema","object","string","required","onSubmit","values","response","post","data","token","error","title","description","status","maxW","mx","mt","p","borderWidth","borderRadius","children","handleSubmit","as","spacing","fileName","_jsxFileName","lineNumber","columnNumber","name","value","onChange","handleChange","type","colorScheme","width","_c","$RefreshReg$"],"sources":["C:/Custom/Coding/tongly-basic/tongly-basic/frontend/src/pages/Login.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, Button, FormControl, FormLabel, Input, VStack, useToast, Stack } from '@chakra-ui/react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { apiClient } from '../api/client';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { LoginCredentials } from '../types';\r\n\r\ninterface LoginResponse {\r\n    token: string;\r\n}\r\n\r\nexport const Login = () => {\r\n    const { login } = useAuth();\r\n    const navigate = useNavigate();\r\n    const toast = useToast();\r\n\r\n    const formik = useFormik<LoginCredentials>({\r\n        initialValues: {\r\n            username: '',\r\n            password: '',\r\n        },\r\n        validationSchema: Yup.object({\r\n            username: Yup.string().required('Required'),\r\n            password: Yup.string().required('Required'),\r\n        }),\r\n        onSubmit: async (values: LoginCredentials) => {\r\n            try {\r\n                const response = await apiClient.post<LoginResponse>('/auth/login', values);\r\n                login(response.data.token);\r\n                navigate('/');\r\n            } catch (error) {\r\n                toast({\r\n                    title: 'Error',\r\n                    description: 'Invalid credentials',\r\n                    status: 'error',\r\n                });\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <Box maxW=\"md\" mx=\"auto\" mt={8} p={6} borderWidth={1} borderRadius=\"lg\">\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <VStack as=\"div\" spacing={4}>\r\n                    <FormControl>\r\n                        <FormLabel>Username</FormLabel>\r\n                        <Input\r\n                            name=\"username\"\r\n                            value={formik.values.username}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <FormLabel>Password</FormLabel>\r\n                        <Input\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            value={formik.values.password}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                    </FormControl>\r\n                    <Button type=\"submit\" colorScheme=\"blue\" width=\"full\">\r\n                        Login\r\n                    </Button>\r\n                </VStack>\r\n            </form>\r\n        </Box>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}